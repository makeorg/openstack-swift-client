image: makeorg/docker-sbt-coursier

stages:
  - coverage
  - build

coverage:
  stage: coverage
  tags:
    - docker
  before_script:
    - if [ ! -e /var/run/docker.sock ]; then DOCKER_DRIVER=vfs dockerd & fi
    - until docker ps; do echo "waiting for docker to be up..."; sleep 0.5; done
    - docker pull bouncestorage/swift-aio
  script:
    - sbt clean coverage test
    - sbt coverageReport
    - sbt codacyCoverage


release:
  stage: build
  only:
    refs:
      - master
    variables:
      - $RELEASE_VERSION
      - $RELEASE_NEXT_VERSION
      - $GPG_PASSWORD
      - $SONATYPE_USER
      - $SONATYPE_PASSWORD
  before_script:
    - mkdir -p ~/.ssh/
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa gitlab.com > ~/.ssh/known_hosts
    - echo "${DEPLOY_PRIVATE_KEY}" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - export CI_PUSH_REPO=`echo $CI_REPOSITORY_URL | perl -pe 's#.*@(.+?(\:\d+)?)/#git@\1:#'`
    - echo "Target repo is ${CI_PUSH_REPO}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git remote set-url origin "${CI_PUSH_REPO}"
    - echo "credentials += Credentials(\"releases\", \"oss.sonatype.org\", \"$SONATYPE_USER\", \"$SONATYPE_PASSWORD\")" > /root/.sbt/1.0/credentials.sbt
    - mkdir -p /root/.sbt/gpg
    - echo "$SONATYPE_GPG_SECRET_KEY" > /root/.sbt/gpg/secring.asc
    - echo "$SONATYPE_GPG_PUBLIC_KEY" > /root/.sbt/gpg/pubring.asc
    - git checkout $CI_COMMIT_REF_NAME
  script:
    - sbt clean "release release-version $RELEASE_VERSION next-version $RELEASE_NEXT_VERSION skip-tests with-defaults"
